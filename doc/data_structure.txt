@startuml

package Cipher <<Frame>> {
	class cdraft << (M,orchid) >> {
		CIPHERID		cipherid
		--
	   -DRAFTID			draftid
	    uint16			version
	    uint16			no
		bool			formal
		string			name
		string[]		tags
		name[]			editors
		ipfskey			hash
		uint16			nofapproval
		name[]			approvers
		name[]			approved
		TASKID[]			tasklist
		TOKENID[]		tokenlist
		--
		key2		version + no
	}

	class cformal << (M,orchid) >> {
		name			"myphersystem"
		--
	   -CIPHERID		ciperid
		DRAFTID			draftid
		string			name
		string[]			tags
	}
}

package Token <<Frame>> {
	class token << (M,orchid) >> {
		name		"myphersystem"
		--
	   -TOKENID		tokenid
		string			name
		CIPHERID		issuer
		uint64			limit
		uint8			when
		uint8			disposal
		uint8			type
		TASKID			taskid
		TOKENID		extokenid
		uint64			reftoken
		uint8			rcalctype
		uint64			nofdesttoken
		float64			nofdesteos
		name[]			approval_4ex
		--
		key2		issuer
	}

	class issue << (M,orchid) >> {
		TOKENID		tokenid
		--
	   -name		owner
		uint64		quantity
	}
}

package Task <<Frame>> {
	class task << (M,orchid) >> {
		name		"myphersystem"
		--
	   -TASKID			taskid
		CIPHERID		owner
		string			name
		TOKENID		rewardid
		uint64			quantity
		uint8			nofapproval
		name[]			approvers
		name[]			approve_content
		name[]			approve_pic
		name[]			approve_results
		name[]			pic
		ipfskey			hash
		bool			formal
		string[]			tags
		--
		key2			owner
	}
}

package Person <<Frame>> {
	class person << (M,orchid) >> {
		name		"myphersystem"
		--
	   -name			personid
		string			name
		string[]			tags
		string			hash
		TOKENID[]		tokenlist
	}
}



@enduml
